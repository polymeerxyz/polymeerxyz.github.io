---
import { Image } from "astro:assets";
import { ArrowBigLeft, ArrowBigRight, Download } from "lucide-react";
import ImgScreen1 from "../../../../assets/features/Screen_1.png";
import ImgScreen2 from "../../../../assets/features/Screen_2.png";
import ImgScreen3 from "../../../../assets/features/Screen_3.png";
import ImgScreen4 from "../../../../assets/features/Screen_4.png";
import ImgScreen5 from "../../../../assets/features/Screen_5.png";
import ImgScreen6 from "../../../../assets/features/Screen_6.png";
import ImgScreen7 from "../../../../assets/features/Screen_7.png";
import ImgScreen8 from "../../../../assets/features/Screen_8.png";

const listImageFeatures = [
  ImgScreen1,
  ImgScreen2,
  ImgScreen3,
  ImgScreen4,
  ImgScreen5,
  ImgScreen6,
  ImgScreen7,
  ImgScreen8,
];
---

<div class="mt-32">
  <div class="section-header">
    <div class="max-w-4xl m-auto text-center flex flex-col gap-7">
      <h2 class="my-0 text-white text-5xl leading-tight font-bold">
        Where <span
          class="gradient-text bg-gradient-to-r from-emerald-500 to-blue-500 bg-clip-text text-transparent"
          >The Next Blockchain</span
        >
        <span
          class="gradient-text bg-gradient-to-r from-emerald-500 to-blue-500 bg-clip-text text-transparent"
          >Revolution</span
        > Happens
      </h2>
      <p class="my-0 text-slate-400 text-xl leading-8 font-semibold">
        All the functions you need. In one SubWallet.
      </p>
    </div>
  </div>

  <div class="max-w-screen-xl m-auto">
    <div class="section-content">
      <div
        class="tm-swiper slider-features"
        data-nav="1"
        data-pagination="0"
        data-loop="0"
        data-items-desktop="4"
        data-items-tablet="3"
        data-items-mobile-extra="2"
        data-items-mobile="1"
        data-gutter-wide-screen="20"
        data-gutter-desktop="20"
        data-gutter-tablet="20"
        data-gutter-mobile-extra="10"
        data-items-group-desktop="1"
        data-custom-nav="id-features-nav"
      >
        <div class="swiper-inner">
          <div class="overflow-hidden relative">
            <div
              id="slider-content"
              class="inline-flex gap-5 duration-700 ease-in-out transition-transform transform -translate-x-slide-0"
              data-number-active-items="0"
            >
              {
                listImageFeatures.map((image, index) => (
                  <div class="w-[300px]">
                    <Image
                      src={image}
                      alt={`Feature ${index}`}
                      width={345}
                      height={613}
                    />
                  </div>
                ))
              }
            </div>
          </div>
        </div>
      </div>
    </div>
    <div class="footer-features flex flex-col">
      <div class="flex justify-end px-10 pt-5 gap-2">
        <div id="btn-prev">
          <ArrowBigLeft
            className="bg-slate-800 rounded-full p-0.5"
            size={26}
            color="white"
            client:visible
          />
        </div>
        <div id="btn-next">
          <ArrowBigRight
            className="bg-slate-800 rounded-full p-0.5"
            size={26}
            color="white"
            client:visible
          />
        </div>
      </div>
      <div class="flex justify-center">
        <a
          class="inline-flex gap-2.5 bg-blue-600 px-9 py-3.5 rounded-full hover:shadow-[0_0_0_.2rem] hover:shadow-blue-600 transition-shadow duration-300 ease-in-out"
        >
          <span>
            <Download size={25} color="white" client:visible />
          </span>
          <span class="text-white text-base font-semibold"
            >Download SubWallet</span
          >
        </a>
      </div>
    </div>
  </div>
  <div
    class="hidden -translate-x-slide-3 -translate-x-slide-2 -translate-x-slide-1 -translate-x-slide-4"
  >
  </div>
</div>
<script>
  const handleNextSlide = () => {
    const slider = document.getElementById("slider-content");

    if (slider) {
      const activeItems = slider?.dataset.dataNumberActiveItems || "0";
      const activeNumber = parseInt(activeItems);

      if (activeNumber === 4) {
        return;
      }

      const newActiveNumber = activeNumber + 1;

      slider.classList.remove(`-translate-x-slide-${activeNumber}`);
      slider.classList.add(`-translate-x-slide-${newActiveNumber}`);

      slider.dataset.dataNumberActiveItems = `${newActiveNumber}`;
    }
  };

  const handlePrevSlide = () => {
    const slider = document.getElementById("slider-content");

    if (slider) {
      const activeItems = slider?.dataset.dataNumberActiveItems || "0";
      const activeNumber = parseInt(activeItems);

      if (activeNumber === 0) {
        return;
      }

      const newActiveNumber = activeNumber - 1;

      slider.classList.remove(`-translate-x-slide-${activeNumber}`);
      slider.classList.add(`-translate-x-slide-${newActiveNumber}`);

      slider.dataset.dataNumberActiveItems = `${newActiveNumber}`;
    }
  };

  document
    .getElementById("btn-next")
    ?.addEventListener("click", handleNextSlide);
  document
    .getElementById("btn-prev")
    ?.addEventListener("click", handlePrevSlide);
</script>
